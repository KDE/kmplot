/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.kmplot.Parser.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef PARSERADAPTOR_H_168131149678948
#define PARSERADAPTOR_H_168131149678948

#include <QtCore/QObject>
#include <dbus/qdbus.h>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.kmplot.Parser
 */
class ParserAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.kmplot.Parser")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.kmplot.Parser\" >\n"
"    <method name=\"addFunction\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"f_str0\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"f_str1\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"removeFunction\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFunctionExpression\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"f_str\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"eq\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"countFunctions\" >\n"
"      <arg direction=\"out\" type=\"u\" />\n"
"    </method>\n"
"    <method name=\"listFunctionNames\" >\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"fnameToID\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"    </method>\n"
"    <method name=\"fkt\" >\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"eq\" />\n"
"      <arg direction=\"in\" type=\"d\" name=\"eq\" />\n"
"    </method>\n"
"    <method name=\"functionFVisible\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"functionF1Visible\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"functionF2Visible\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"functionIntVisible\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"setFunctionFVisible\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"visible\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"setFunctionF1Visible\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"visible\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"setFunctionF2Visible\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"visible\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"setFunctionIntVisible\" >\n"
"      <arg direction=\"in\" type=\"b\" name=\"visible\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"    </method>\n"
"    <method name=\"functionStr\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"eq\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"functionFLineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"    </method>\n"
"    <method name=\"functionF1LineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"    </method>\n"
"    <method name=\"functionF2LineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"    </method>\n"
"    <method name=\"functionIntLineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"d\" />\n"
"    </method>\n"
"    <method name=\"setFunctionFLineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"d\" name=\"linewidth\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFunctionF1LineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"d\" name=\"linewidth\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFunctionF2LineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"d\" name=\"linewidth\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFunctionIntLineWidth\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"in\" type=\"d\" name=\"linewidth\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"functionParameterList\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"as\" />\n"
"    </method>\n"
"    <method name=\"functionAddParameter\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"new_parameter\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"functionRemoveParameter\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"remove_parameter\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"functionMinValue\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"functionMaxValue\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setFunctionMaxValue\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"min\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setFunctionMinValue\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"min\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"functionStartXValue\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"functionStartYValue\" >\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"    <method name=\"setFunctionStartValue\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"s\" name=\"y\" />\n"
"      <arg direction=\"in\" type=\"u\" name=\"id\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    ParserAdaptor(QObject *parent);
    virtual ~ParserAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    int addFunction(const QString &f_str0, const QString &f_str1);
    uint countFunctions();
    double fkt(uint id, uint eq, double eq_);
    int fnameToID(const QString &name);
    bool functionAddParameter(const QString &new_parameter, uint id);
    double functionF1LineWidth(uint id);
    bool functionF1Visible(uint id);
    double functionF2LineWidth(uint id);
    bool functionF2Visible(uint id);
    double functionFLineWidth(uint id);
    bool functionFVisible(uint id);
    double functionIntLineWidth(uint id);
    bool functionIntVisible(uint id);
    QString functionMaxValue(uint id);
    QString functionMinValue(uint id);
    QStringList functionParameterList(uint id);
    bool functionRemoveParameter(const QString &remove_parameter, uint id);
    QString functionStartXValue(uint id);
    QString functionStartYValue(uint id);
    QString functionStr(uint eq, uint id);
    QStringList listFunctionNames();
    bool removeFunction(uint id);
    bool setFunctionExpression(const QString &f_str, uint id, uint eq);
    bool setFunctionF1LineWidth(uint id, double linewidth);
    void setFunctionF1Visible(bool visible, uint id);
    bool setFunctionF2LineWidth(uint id, double linewidth);
    void setFunctionF2Visible(bool visible, uint id);
    bool setFunctionFLineWidth(uint id, double linewidth);
    void setFunctionFVisible(bool visible, uint id);
    bool setFunctionIntLineWidth(uint id, double linewidth);
    void setFunctionIntVisible(bool visible, uint id);
    bool setFunctionMaxValue(const QString &min, uint id);
    bool setFunctionMinValue(const QString &min, uint id);
    bool setFunctionStartValue(const QString &x, const QString &y, uint id);
Q_SIGNALS: // SIGNALS
};

#endif
