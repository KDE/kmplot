/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.kmplot.MainDlg.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#include "maindlgadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MainDlgAdaptor
 */

MainDlgAdaptor::MainDlgAdaptor(QObject *parent)
   : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MainDlgAdaptor::~MainDlgAdaptor()
{
    // destructor
}

bool MainDlgAdaptor::checkModified()
{
    // handle method call org.kde.kmplot.MainDlg.checkModified
    bool out0;
    QMetaObject::invokeMethod(parent(), "checkModified", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->checkModified();
    return out0;
}

void MainDlgAdaptor::editAxes()
{
    // handle method call org.kde.kmplot.MainDlg.editAxes
    QMetaObject::invokeMethod(parent(), "editAxes");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->editAxes();
}

void MainDlgAdaptor::editScaling()
{
    // handle method call org.kde.kmplot.MainDlg.editScaling
    QMetaObject::invokeMethod(parent(), "editScaling");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->editScaling();
}

void MainDlgAdaptor::findMaximumValue()
{
    // handle method call org.kde.kmplot.MainDlg.findMaximumValue
    QMetaObject::invokeMethod(parent(), "findMaximumValue");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->findMaximumValue();
}

void MainDlgAdaptor::findMinimumValue()
{
    // handle method call org.kde.kmplot.MainDlg.findMinimumValue
    QMetaObject::invokeMethod(parent(), "findMinimumValue");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->findMinimumValue();
}

void MainDlgAdaptor::getYValue()
{
    // handle method call org.kde.kmplot.MainDlg.getYValue
    QMetaObject::invokeMethod(parent(), "getYValue");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->getYValue();
}

void MainDlgAdaptor::graphArea()
{
    // handle method call org.kde.kmplot.MainDlg.graphArea
    QMetaObject::invokeMethod(parent(), "graphArea");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->graphArea();
}

bool MainDlgAdaptor::isModified()
{
    // handle method call org.kde.kmplot.MainDlg.isModified
    bool out0;
    QMetaObject::invokeMethod(parent(), "isModified", Q_RETURN_ARG(bool, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->isModified();
    return out0;
}

void MainDlgAdaptor::slotCoord1()
{
    // handle method call org.kde.kmplot.MainDlg.slotCoord1
    QMetaObject::invokeMethod(parent(), "slotCoord1");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotCoord1();
}

void MainDlgAdaptor::slotCoord2()
{
    // handle method call org.kde.kmplot.MainDlg.slotCoord2
    QMetaObject::invokeMethod(parent(), "slotCoord2");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotCoord2();
}

void MainDlgAdaptor::slotCoord3()
{
    // handle method call org.kde.kmplot.MainDlg.slotCoord3
    QMetaObject::invokeMethod(parent(), "slotCoord3");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotCoord3();
}

void MainDlgAdaptor::slotExport()
{
    // handle method call org.kde.kmplot.MainDlg.slotExport
    QMetaObject::invokeMethod(parent(), "slotExport");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotExport();
}

void MainDlgAdaptor::slotNames()
{
    // handle method call org.kde.kmplot.MainDlg.slotNames
    QMetaObject::invokeMethod(parent(), "slotNames");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotNames();
}

void MainDlgAdaptor::slotPrint()
{
    // handle method call org.kde.kmplot.MainDlg.slotPrint
    QMetaObject::invokeMethod(parent(), "slotPrint");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotPrint();
}

void MainDlgAdaptor::slotSave()
{
    // handle method call org.kde.kmplot.MainDlg.slotSave
    QMetaObject::invokeMethod(parent(), "slotSave");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotSave();
}

void MainDlgAdaptor::slotSaveas()
{
    // handle method call org.kde.kmplot.MainDlg.slotSaveas
    QMetaObject::invokeMethod(parent(), "slotSaveas");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotSaveas();
}

void MainDlgAdaptor::slotSettings()
{
    // handle method call org.kde.kmplot.MainDlg.slotSettings
    QMetaObject::invokeMethod(parent(), "slotSettings");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->slotSettings();
}

void MainDlgAdaptor::toggleShowSliders()
{
    // handle method call org.kde.kmplot.MainDlg.toggleShowSliders
    QMetaObject::invokeMethod(parent(), "toggleShowSliders");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->toggleShowSliders();
}


#include "maindlgadaptor.moc"
